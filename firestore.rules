// cSpell:ignore Firestore
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Documents collection
    match /documents/{documentId} {
      // Document creators can read/write their own documents
      allow read, write: if request.auth != null && 
        (resource.data.createdBy == request.auth.uid || 
         request.auth.uid in resource.data.signers[].email);
      
      // Allow creating new documents if user is authenticated
      allow create: if request.auth != null && 
        request.auth.uid == resource.data.createdBy;
      
      // Allow updates for document completion/signing
      allow update: if request.auth != null && 
        (resource.data.createdBy == request.auth.uid ||
         // Allow signers to update signature status
         request.auth.uid in resource.data.signers[].email);
    }
    
    // User profiles (if you add user authentication later)
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Audit logs (read-only for users, write access through cloud functions)
    match /audit_logs/{logId} {
      allow read: if request.auth != null;
      allow write: if false; // Only cloud functions can write audit logs
    }
  }
}

// Storage rules for Firebase Storage
service firebase.storage {
  match /b/{bucket}/o {
    
    // Documents folder - allow read/write for authenticated users
    match /documents/{userId}/{filename} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Signatures folder - allow read/write for authenticated users
    match /signatures/{documentId}/{filename} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }
    
    // Public assets (if any)
    match /public/{filename} {
      allow read: if true;
      allow write: if request.auth != null;
    }
  }
}
